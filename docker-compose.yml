version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:8
    container_name: savemymoney-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-admin123}
      MONGO_INITDB_DATABASE: savemymoney
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - savemymoney-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: savemymoney-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - savemymoney-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: savemymoney-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGO_URI: mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-admin123}@mongodb:27017/savemymoney?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your_super_secret_jwt_key_change_in_production}
      REDIS_URL: redis://redis:6379
      CLIENT_URL: ${CLIENT_URL:-http://localhost}
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - savemymoney-network
    volumes:
      - ./server/logs:/app/logs

  # ML API
  ml-api:
    build:
      context: .
      dockerfile: Dockerfile.ml
    container_name: savemymoney-ml
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      MONGODB_URI: mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-admin123}@mongodb:27017/savemymoney?authSource=admin
      NODE_API_URL: http://backend:5000
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - savemymoney-network

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.client
    container_name: savemymoney-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - savemymoney-network

networks:
  savemymoney-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  redis_data:
    driver: local
